#include "WindowBorderPanel_mac.h"

WindowBorderPanelMac::WindowBorderPanelMac(const std::string &window_number, int32_t timer_interval_ms):
	WindowBorderPanel(window_number, timer_interval_ms)
{
	NSString *window_number_str = [[NSString alloc] initWithUTF8String:window_number.c_str()];
	border_panel_controller_ = [[BorderPanelController alloc] initWithWindowOrScreenNumber:window_number_str];
	[window_number_str dealloc];
}

WindowBorderPanelMac::~WindowBorderPanelMac()
{
	[border_panel_controller_ dealloc];
	border_panel_controller_ = nullptr;
}

void WindowBorderPanelMac::SetWindowNumber(const std::string& window_number)
{
	WindowBorderPanel::SetWindowNumber(window_number);

	[border_panel_controller_ updateWindowOrScreenNumber:[[NSString alloc] initWithUTF8String:window_number.c_str()]];
}

void WindowBorderPanelMac::SetBorderColor(double red, double green, double blue, double alpha)
{
	WindowBorderPanel::SetBorderColor(red, green, blue, alpha);

	[border_panel_controller_ updateBackgroundColorWithRed:red green:green blue:blue alpha:alpha];
}

void WindowBorderPanelMac::SetBorderWidth(double border_width) {
	WindowBorderPanel::SetBorderWidth(border_width);

	[border_panel_controller_ updateBorderWidth:border_width];
}

void WindowBorderPanelMac::ShowPanel() {
	[border_panel_controller_ show];
}

void WindowBorderPanelMac::HidePanel() {
	[border_panel_controller_ hide];
}

int32_t WindowBorderPanelMac::GetTargetWindowX() {
	return [border_panel_controller_ getWindowXPosition];
}

int32_t WindowBorderPanelMac::GetTargetWindowY() {
	return [border_panel_controller_ getWindowYPosition];
}

int32_t WindowBorderPanelMac::GetTargetWindowWidth() {
	return [border_panel_controller_ getWindowWidth];
}

int32_t WindowBorderPanelMac::GetTargetWindowHeight() {
	return [border_panel_controller_ getWindowHeight];
}
